(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{424:function(t,e,a){t.exports=a.p+"assets/img/reddit-fetch-demo.53581dea.gif"},425:function(t,e,a){t.exports=a.p+"assets/img/github-fetch-demo.da85e165.gif"},452:function(t,e,a){"use strict";a.r(e);var s=a(34),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"assignment-list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assignment-list"}},[t._v("#")]),t._v(" Assignment List")]),t._v(" "),s("hr"),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"#_1-dom-content"}},[t._v("DOM Content")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#_2-dom-cascade"}},[t._v("DOM Cascade")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#_3-fetch-reddit"}},[t._v("Fetch Reddit")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#_4-fetch-github"}},[t._v("Fetch Github")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#_5-data-management"}},[t._v("Data Management")])])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"_1-dom-content"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-dom-content"}},[t._v("#")]),t._v(" 1. DOM Content")]),t._v(" "),s("p",[t._v("This first assignment requires you to take an array of objects and create HTML from the data.")]),t._v(" "),s("p",[t._v("Create an HTML file with a "),s("code",[t._v("<header>")]),t._v(" that contains an "),s("code",[t._v("<h1>")]),t._v(" and an "),s("code",[t._v("<h2>")]),t._v(", plus a "),s("code",[t._v("<main>")]),t._v(" element. Load the\ndata-generated HTML into the "),s("code",[t._v("<main>")]),t._v(" element.")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("header")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("header")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- content will be built here by javascript --\x3e")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("Start with this sample Array, and replace the value of the "),s("code",[t._v("content")]),t._v(" properties with actual information about yourself.\nYou will also need to create a folder called "),s("code",[t._v("img")]),t._v(" and put an image or avatar of yourself into a "),s("code",[t._v("img")]),t._v(" folder with the\nfilename "),s("code",[t._v("me.jpg")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" info "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'h3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Your Name'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Born in City, Country.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'img'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Your Name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./img/me.jpg'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Something about pets that you may have had.'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Something about your siblings.'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("Use an Array "),s("code",[t._v("forEach()")]),t._v(" method to loop through the "),s("code",[t._v("info")]),t._v(" Array. The value of the "),s("code",[t._v("tag")]),t._v(" property is to be used to\ncreate an element. Use the "),s("code",[t._v("document.createElement()")]),t._v(" method to create each element.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("content")]),t._v(" property will be used as either the "),s("code",[t._v("textContent")]),t._v(" of the element or the value of an "),s("code",[t._v("alt")]),t._v(" attribute, if\nthe element is an "),s("code",[t._v("<img>")]),t._v(". If the element is an "),s("code",[t._v("img")]),t._v(" then there should be a "),s("code",[t._v("src")]),t._v(" property.")]),t._v(" "),s("p",[t._v("For each item in the array, you need to check if there is a "),s("code",[t._v("children")]),t._v(" property. If there is a "),s("code",[t._v("children")]),t._v(" property, then\nyou must loop through it and add an element for whichever "),s("code",[t._v("tag")]),t._v(" is defined.")]),t._v(" "),s("p",[t._v("Use the "),s("code",[t._v("in")]),t._v(" keyword to check for properties in the Array. Eg:")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'propName'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" myObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//yes myObject.propName exists")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("Remember, if any of the "),s("code",[t._v("tag")]),t._v(" items have the value "),s("code",[t._v("img")]),t._v(", then use the value of the "),s("code",[t._v("src")]),t._v(" property as the value of the\n"),s("code",[t._v("<img>")]),t._v(" "),s("code",[t._v("src")]),t._v(" attribute.")]),t._v(" "),s("p",[t._v("Use the "),s("code",[t._v("append()")]),t._v(" method to add your newly created elements to the page.")]),t._v(" "),s("h3",{attrs:{id:"challenge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#challenge"}},[t._v("#")]),t._v(" Challenge")]),t._v(" "),s("p",[t._v("Try to only make one call to "),s("code",[t._v("append()")]),t._v(" to the "),s("code",[t._v("<main>")]),t._v(" element. The browser should not be forced to re-paint the page\nmore than once. The "),s("code",[t._v("append()")]),t._v(" call should be called after the "),s("code",[t._v("forEach")]),t._v(" method is called. "),s("strong",[t._v("Hint")]),t._v(": Use a\n"),s("code",[t._v("documentFragment")]),t._v(" as a temporary wrapper for the elements while you are inside the "),s("code",[t._v("forEach")]),t._v(" loop and then append the\n"),s("code",[t._v("documentFragment")]),t._v(" after the loop.")]),t._v(" "),s("h4",{attrs:{id:"submission"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#submission"}},[t._v("#")]),t._v(" Submission")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Due Date **Week 5**")]),t._v(" "),s("p",[t._v("(See BS LMS for exact date)")])]),t._v(" "),s("p",[t._v("Create a "),s("strong",[t._v("private")]),t._v(" Github Repo called "),s("code",[t._v("dom-content")]),t._v(". Copy the URL for your repo. Then in VSCode, in the Terminal type:")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message about code added to project"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<paste your repo url here>"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin main\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("Open BS LMS and go to the "),s("code",[t._v("Activities > Assignments")]),t._v(" page.")]),t._v(" "),s("p",[t._v("Go to the "),s("code",[t._v("DOM 1")]),t._v(" and submit the link to your repository into the text area. Then submit the form and look for\nconfirmation.")]),t._v(" "),s("h2",{attrs:{id:"_2-dom-cascade"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-dom-cascade"}},[t._v("#")]),t._v(" 2. DOM Cascade")]),t._v(" "),s("p",[t._v("Create a set of cascading select lists, where the selection of an item from the first list determines which list to\ndisplay in the second list.")]),t._v(" "),s("p",[t._v("Create an "),s("code",[t._v("HTML")]),t._v(" file with two empty "),s("code",[t._v("<select>")]),t._v(" elements inside a "),s("code",[t._v("<form>")]),t._v(", which is inside a "),s("code",[t._v("<main>")]),t._v(" element. Make\nsure each "),s("code",[t._v("<select>")]),t._v(" has a "),s("code",[t._v("<label>")]),t._v(" element. Alternatively, you can make two "),s("code",[t._v("<input>")]),t._v(" elements that have a "),s("code",[t._v("list")]),t._v("\nattribute that points to a "),s("code",[t._v("<datalist>")]),t._v(". You can populate the two "),s("code",[t._v("<datalist>")]),t._v(" elements with the information in the\n"),s("code",[t._v("data")]),t._v(" array.")]),t._v(" "),s("p",[t._v("In the "),s("code",[t._v("JS")]),t._v(" you need to create your own array of objects that will hold all the content for both lists.")]),t._v(" "),s("p",[s("strong",[t._v("Try to put this data into its own JavaScript file and then import it into your main script.")])]),t._v(" "),s("p",[t._v("Here is an example of what the structure would look like. "),s("strong",[t._v("Replace all the values with ones of your own.")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("item")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Cheese'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("subitems")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Cheddar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Mozzarella'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Blue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Stilton'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("item")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Beer'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("subitems")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Corona'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Modelo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Heineken'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Del Sol'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("item")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Artists'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("subitems")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'VanGogh'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Picasso'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Monet'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bateman'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("item")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Movies'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("subitems")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Inception'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Memento'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Dunkirk'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'The Dark Knight'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("Use the same value for both the "),s("code",[t._v("text")]),t._v(" and "),s("code",[t._v("value")]),t._v(" of each "),s("code",[t._v("<option>")]),t._v(" that you generate.")]),t._v(" "),s("p",[t._v("Use "),s("code",[t._v("addEventListener")]),t._v(" to add a "),s("code",[t._v("change")]),t._v(" event listener to the first "),s("code",[t._v("<select>")]),t._v(" element. When the "),s("code",[t._v("change")]),t._v(" event is\ntriggered, load the matching "),s("code",[t._v("subitems")]),t._v(" into the second "),s("code",[t._v("<select>")]),t._v(". Alternatively, if you are using the two\n"),s("code",[t._v("<input list>")]),t._v(" elements instead of the "),s("code",[t._v("<select>")]),t._v(" elements, you can listen for the "),s("code",[t._v("input")]),t._v(" event.")]),t._v(" "),s("p",[t._v("When the "),s("code",[t._v("DOMContentLoaded")]),t._v(" event is triggered load the "),s("code",[t._v("item")]),t._v(" values into the first "),s("code",[t._v("<select>")]),t._v(" or "),s("code",[t._v("<datalist>")]),t._v(" and the\nmatching "),s("code",[t._v("subitems")]),t._v(" into the second "),s("code",[t._v("<select>")]),t._v(" or "),s("code",[t._v("<datalist>")]),t._v(".")]),t._v(" "),s("h4",{attrs:{id:"submission-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#submission-2"}},[t._v("#")]),t._v(" Submission")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Due Date **Week 7**")]),t._v(" "),s("p",[t._v("(See BS LMS for exact date)")])]),t._v(" "),s("p",[t._v("Create a "),s("strong",[t._v("private")]),t._v(" Github Repo called "),s("code",[t._v("dom-cascade")]),t._v(". Copy the URL for your repo. Then in VSCode, in the Terminal type:")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message about code added to project"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<paste your repo url here>"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin main\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("After you have uploaded your code, go to the "),s("code",[t._v("Settings")]),t._v(" page and click on the "),s("code",[t._v("Collaborators")]),t._v(" link in the left-hand\nmenu. Add the user "),s("code",[t._v("prof3ssorSt3v3")]),t._v(" as a collaborator to your repo.")]),t._v(" "),s("p",[t._v("Open BS LMS and go to the "),s("code",[t._v("Activities > Assignments")]),t._v(" page.")]),t._v(" "),s("p",[t._v("Go to the "),s("code",[t._v("DOM 2")]),t._v(" assignment and submit the link to your repository into the text area. Then submit the form and look\nfor confirmation.")]),t._v(" "),s("h2",{attrs:{id:"_3-fetch-reddit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-fetch-reddit"}},[t._v("#")]),t._v(" 3. Fetch Reddit")]),t._v(" "),s("p",[t._v("In this assignment we will use the Reddit website API feature that allows developers to simply add "),s("code",[t._v(".json")]),t._v(" on to the end\nof any URL to get the JSON version of the data that is displayed on the page.")]),t._v(" "),s("blockquote",[s("p",[t._v("you should also change the "),s("code",[t._v("www")]),t._v(" part of the url to "),s("code",[t._v("api")]),t._v(".")])]),t._v(" "),s("p",[t._v("You are to create a webpage that has three sections. Each section needs a title "),s("code",[t._v("<h2>")]),t._v(" plus a "),s("code",[t._v("<button>LOAD</button>")]),t._v("\nand an unordered list "),s("code",[t._v("<ul>")]),t._v(".")]),t._v(" "),s("p",[t._v("Each title is the name of a subreddit that you like.")]),t._v(" "),s("p",[t._v("Add the following functionality to the page:")]),t._v(" "),s("ul",[s("li",[t._v("Each time the user clicks one of the "),s("code",[t._v("LOAD")]),t._v(" buttons, it will trigger a fetch of the JSON version of the home page for\nthe subreddit from that section.")]),t._v(" "),s("li",[t._v("when the JSON for the subreddit is returned, clear out the old contents of the "),s("code",[t._v("<ul>")]),t._v(" in that section (using\n"),s("code",[t._v("innerHTML")]),t._v("), then you need to loop through the contents of the "),s("code",[t._v("data.children")]),t._v(" array. For each of the objects in the\n"),s("code",[t._v("children")]),t._v(" array, take the "),s("code",[t._v("data.title")]),t._v(" property and display it as the contents of a new "),s("code",[t._v("<li>")]),t._v(" in the "),s("code",[t._v("<ul>")]),t._v(".")]),t._v(" "),s("li",[t._v("Use just the same one function for all three button instead of duplicating the code three times. Inside the function\nyou only need to determine which URL to fetch and which list to write the content inside of. You can use the "),s("code",[t._v("id")]),t._v(" or\n"),s("code",[t._v("class")]),t._v(" or "),s("code",[t._v("data-")]),t._v(" properties in the buttons to figure this out.")])]),t._v(" "),s("p",[t._v("The layout of the sections should be responsive. If the page is less than 900px (or 60rem) wide, then stack the sections\nvertically on top of each other. If the page is more than 900px (or 60rem) then display the three sections beside each\nother.")]),t._v(" "),s("h4",{attrs:{id:"demo-animation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#demo-animation"}},[t._v("#")]),t._v(" Demo Animation")]),t._v(" "),s("p",[t._v("This screen capture shows the idea behind what your web app should be doing.")]),t._v(" "),s("p",[s("img",{attrs:{src:a(424),alt:"Reddit Fetch screencap"}})]),t._v(" "),s("h4",{attrs:{id:"submission-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#submission-3"}},[t._v("#")]),t._v(" Submission")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Due Date **Week 10**")]),t._v(" "),s("p",[t._v("(See BS LMS for exact date)")])]),t._v(" "),s("p",[t._v("Create a "),s("strong",[t._v("private")]),t._v(" Github Repo called "),s("code",[t._v("fetch-reddit")]),t._v(". Copy the URL for your repo. Then in VSCode, in the Terminal\ntype:")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message about code added to project"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<paste your repo url here>"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin main\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("After you have uploaded your code, go to the "),s("code",[t._v("Settings")]),t._v(" page and click on the "),s("code",[t._v("Collaborators")]),t._v(" link in the left-hand\nmenu. Add the user "),s("code",[t._v("prof3ssorSt3v3")]),t._v(" as a collaborator to your repo.")]),t._v(" "),s("p",[t._v("Open BS LMS and go to the "),s("code",[t._v("Activities > Assignments")]),t._v(" page.")]),t._v(" "),s("p",[t._v("Go to the "),s("code",[t._v("Fetch Reddit")]),t._v(" assignment and submit the link to your repository into the text area. Then submit the form and\nlook for confirmation.")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"_4-fetch-github"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-fetch-github"}},[t._v("#")]),t._v(" 4. Fetch Github")]),t._v(" "),s("p",[t._v("For this assignment you are to use "),s("a",{attrs:{href:"https://docs.github.com/en/rest/repos",target:"_blank",rel:"noopener noreferrer"}},[t._v("the Github REST APIs"),s("OutboundLink")],1),t._v(". You can use either the\n"),s("code",[t._v("Octokit")]),t._v(" library or the plain "),s("code",[t._v("fetch()")]),t._v(" approach to calling the API.")]),t._v(" "),s("p",[t._v("Your assignment is to create a webpage that will make API calls to Github for the list of repositories that belong to a\nuser OR a list of followers for a user.")]),t._v(" "),s("p",[t._v("The URL you will be calling is "),s("code",[t._v("https://api.github.com/users/{username}/repos")]),t._v(" OR\n"),s("code",[t._v("https://api.github.com/users/{username}/followers")]),t._v(". Your webpage should have an "),s("code",[t._v('<input type="text" />')]),t._v(" and a\n"),s("code",[t._v("<button>")]),t._v(".")]),t._v(" "),s("p",[t._v("The user will enter a username in the input and then click the button. This needs to trigger the API call. Take whatever\nthe user typed in the input, do a "),s("code",[t._v("trim()")]),t._v(" on the value and then put that value in the URL in place of the "),s("code",[t._v("{username}")]),t._v(".")]),t._v(" "),s("blockquote",[s("p",[t._v("If the trimmed string value from the input is empty, then do NOT do the fetch call.")])]),t._v(" "),s("p",[t._v("If no matches come back, you need to display a message on the page about there being no match.")]),t._v(" "),s("p",[t._v("If you do get a valid list of repos, then display those on the page as a series of HTML elements like this:")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- for repo list --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("${html_url}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("target")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("_blank"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("${name}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Watchers: ${watchers}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Open Issues: ${open_issues}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- for follower list --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("${avatar_url}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("alt")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("${login}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("${html_url}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("target")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("_blank"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("${login}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("p",[t._v("The text in the anchors should be the "),s("code",[t._v("name")]),t._v(" or "),s("code",[t._v("login")]),t._v(" property of the repo or follower object. The value of the "),s("code",[t._v("href")]),t._v("\nattribute should use "),s("code",[t._v("https://www.github.com/")]),t._v(" plus the value from the "),s("code",[t._v("full_name")]),t._v(" or "),s("code",[t._v("url")]),t._v(" property as the link. The\nvalue of the img src attribute should use the value from the "),s("code",[t._v("avatar_url")]),t._v(" property.")]),t._v(" "),s("p",[t._v("Whether you use "),s("code",[t._v("name")]),t._v(" or "),s("code",[t._v("login")]),t._v(" or "),s("code",[t._v("url")]),t._v(" or "),s("code",[t._v("full_name")]),t._v(" will depend on whether you are displaying the list of repos or\nthe list of followers.")]),t._v(" "),s("h4",{attrs:{id:"demo-animation-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#demo-animation-2"}},[t._v("#")]),t._v(" Demo Animation")]),t._v(" "),s("p",[t._v("This screen capture shows the idea behind what your web app should be doing.")]),t._v(" "),s("p",[s("img",{attrs:{src:a(425),alt:"Github Fetch screencap"}})]),t._v(" "),s("h4",{attrs:{id:"submission-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#submission-4"}},[t._v("#")]),t._v(" Submission")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Due Date **Week 11**")]),t._v(" "),s("p",[t._v("(See BS LMS for exact date)")])]),t._v(" "),s("p",[t._v("Create a "),s("strong",[t._v("private")]),t._v(" Github Repo called "),s("code",[t._v("fetch-github")]),t._v(". Copy the URL for your repo. Then in VSCode, in the Terminal\ntype:")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message about code added to project"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<paste your repo url here>"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin main\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("After you have uploaded your code, go to the "),s("code",[t._v("Settings")]),t._v(" page and click on the "),s("code",[t._v("Collaborators")]),t._v(" link in the left-hand\nmenu. Add the user "),s("code",[t._v("prof3ssorSt3v3")]),t._v(" as a collaborator to your repo.")]),t._v(" "),s("p",[t._v("Open BS LMS and go to the "),s("code",[t._v("Activities > Assignments")]),t._v(" page.")]),t._v(" "),s("p",[t._v("Go to the "),s("code",[t._v("Fetch Github")]),t._v(" assignment and submit the link to your repository into the text area. Then submit the form and\nlook for confirmation.")]),t._v(" "),s("h2",{attrs:{id:"_5-data-management"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-data-management"}},[t._v("#")]),t._v(" 5. Data Management")]),t._v(" "),s("h4",{attrs:{id:"preparation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#preparation"}},[t._v("#")]),t._v(" Preparation")]),t._v(" "),s("p",[t._v("To do this assignment you will need to sign up for a developer api key with the "),s("a",{attrs:{href:"https://thecatapi.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cat API"),s("OutboundLink")],1),t._v(". Sign\nup for the free account.")]),t._v(" "),s("p",[t._v("Have a look through the "),s("a",{attrs:{href:"https://developers.thecatapi.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cat API documentation"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("Download a copy of the "),s("a",{attrs:{href:"https://gist.github.com/prof3ssorSt3v3/e184a07c5e2e5c78bf27baa660add4aa",target:"_blank",rel:"noopener noreferrer"}},[t._v("catlist.js script"),s("OutboundLink")],1),t._v("\nwhich you will import and use each time you need to generate a random cat name.")]),t._v(" "),s("p",[t._v("Download a copy of the "),s("a",{attrs:{href:"https://gist.github.com/prof3ssorSt3v3/ceede595db5bc79dc789322527a6f1e9",target:"_blank",rel:"noopener noreferrer"}},[t._v("utils.js script"),s("OutboundLink")],1),t._v(" which\nyou will import and use with all your API calls when you need to report an error. You can add other utility functions\nand use this file in other projects too.")]),t._v(" "),s("h4",{attrs:{id:"description"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description"}},[t._v("#")]),t._v(" Description")]),t._v(" "),s("p",[t._v("The Cat API can return a list of categories and then use the id of a category to fetch a collection of cat images.\nUnfortunately, there are no names associated with any of the images. So, we are going to build a webpage that lets users\nsearch for "),s("code",[t._v("random")]),t._v(" cat images from the Cat API and then generate random names for each cat image that is fetched.")]),t._v(" "),s("p",[t._v("However, we want to have the same name appear for each cat image every time it is shown. So, we will create an object\nthat uses the cat image ids as the properties and assign a random name to each one. See below as an example of what the\nobject could look like. It could be a global variable or a property in a namespace.")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" catnames "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ab12")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Muffin'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("df34")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Willow'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("e766")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Mr Boots'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("Each name comes from the "),s("code",[t._v("pickRandomName()")]),t._v(" function in the "),s("code",[t._v("catlist.js")]),t._v(" file.")]),t._v(" "),s("p",[t._v("To make the association between the names and the images permanent you need to save the "),s("code",[t._v("catnames")]),t._v(" object in\n"),s("code",[t._v("localstorage")]),t._v(". Everytime your webpage loads you need to check in "),s("code",[t._v("localstorage")]),t._v(" for the cat name object. If it is in\n"),s("code",[t._v("localstorage")]),t._v(", then load it into the JavaScript "),s("code",[t._v("catnames")]),t._v(" object. If it is not there then the "),s("code",[t._v("catnames")]),t._v(" object will\nstart as an empty "),s("code",[t._v("{}")]),t._v(".")]),t._v(" "),s("p",[t._v("Each time you make a change, or a group of changes, to the "),s("code",[t._v("catnames")]),t._v(" object then you need to update what is stored in\n"),s("code",[t._v("localstorage")]),t._v(".")]),t._v(" "),s("p",[t._v("You need to have a unique key name for your "),s("code",[t._v("localstorage")]),t._v(" cat name entry. A good approach to this is to have part of\nthe name be descriptive of your app and the other part be unique to you. Eg: "),s("code",[t._v("catnames-abcd0001")]),t._v(" "),s("code",[t._v("catnames")]),t._v(" plus your\nalgonquin username.")]),t._v(" "),s("h4",{attrs:{id:"demo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[t._v("#")]),t._v(" Demo")]),t._v(" "),s("p",[t._v("Here is a demo version of the assignment. Your CSS should not match this exactly. Make the design your own. This just\nexplains how the web app should generally work. Feel free to ask questions in class and on Slack about the assignment.")]),t._v(" "),s("YouTube",{attrs:{title:"Demo version of the assignment",url:"https://www.youtube.com/embed/Kywb4xwT1FY"}}),t._v(" "),s("h4",{attrs:{id:"requirements"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[t._v("#")]),t._v(" Requirements")]),t._v(" "),s("ol",[s("li",[t._v("When the page loads - fetch the list of categories from the Cat API.")]),t._v(" "),s("li",[t._v("When the page loads - check localstorage for the existing list of catnames assigned to image ids and load that object\ninto a JS variable.")]),t._v(" "),s("li",[t._v("When the user selects a category from the dropdown list - a fetch is made for random cat images that match the\nselected category from the Cat API. Your web app should retrieve between 10 and 30 images with each request.")]),t._v(" "),s("li",[t._v("All the fetched cat images are displayed as cards in a responsive grid like layout.")]),t._v(" "),s("li",[t._v("As the images are fetched, their ids are used as keys for randomly generated cat names in a cat name object.")]),t._v(" "),s("li",[t._v("With each new fetch of cat images, the updated cat name object overwrites the old cat names in localstorage.")]),t._v(" "),s("li",[t._v("When the page is reloaded and cat images are fetched, the previously generated cat names should still be shown in\nconnection with the same cat images.")]),t._v(" "),s("li",[t._v("Each cat card needs to display a cat image and a cat name.")]),t._v(" "),s("li",[t._v("The cat card content is created using "),s("code",[t._v("data.map().join()")]),t._v(" set to "),s("code",[t._v("innerHTML")]),t._v(".")]),t._v(" "),s("li",[t._v("If an error occurs when fetching the cat categories or images then a message needs to be displayed to the user\nwithin the "),s("code",[t._v("<main>")]),t._v(" area, not with an "),s("code",[t._v("alert()")]),t._v(".")]),t._v(" "),s("li",[t._v("If the grid of cat cards is empty because no results have been fetched yet, or because the fetch returned no\nresults, or because there was an error in the fetching, then display a message in the "),s("code",[t._v("<main>")]),t._v(" area about there\nbeing no results and asking the user to select a category.")]),t._v(" "),s("li",[t._v("The repo uses Github Pages to display a working website version of the repo.")])]),t._v(" "),s("h4",{attrs:{id:"submission-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#submission-5"}},[t._v("#")]),t._v(" Submission")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Due Date **Week 13** (See BS LMS for exact date) :::")]),t._v(" "),s("p",[t._v("Create a "),s("strong",[t._v("private")]),t._v(" Github Repo called "),s("code",[t._v("data-mgmt")]),t._v(". Copy the URL for your repo. Then in VSCode, in the Terminal type:")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message about code added to project"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<paste your repo url here>"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin main\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("After you have uploaded your code, go to the "),s("code",[t._v("Settings")]),t._v(" page and click on the "),s("code",[t._v("Collaborators")]),t._v(" link in the left-hand\nmenu. Add the user "),s("code",[t._v("prof3ssorSt3v3")]),t._v(" as a collaborator to your repo.")]),t._v(" "),s("p",[t._v("Open BS LMS and go to the "),s("code",[t._v("Activities > Assignments")]),t._v(" page.")]),t._v(" "),s("p",[t._v("Go to the "),s("code",[t._v("data-mgmt")]),t._v(" assignment and submit the link to your repository PLUS the link to your github pages version into\nthe text area. Then submit the form and look for confirmation.")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/assignments/"}},[t._v("Back to Assignments Page")])],1)])],1)}),[],!1,null,null,null);e.default=n.exports}}]);